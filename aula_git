# aula de git

# Curiosidades
	- Criador Linux Torval

# conceitos
	-  Branch - são ramificações de versões do sistema;


# Instalando
	apt-get install git

# Comandos
	git --version

	echo "# Repo HPD - Aula GIt" > README.md # cria o readme
	git init # cria a estrutura do dir
	git status # verifica o status do git
	git add README.md # adiciona o readme
	git commit -m "Comentario do pq o commit" README.md # para prepara o mesmo para o push no repo
	git remote add origin git@github.com:kaioaresi/HPD.git # adicione seu repo
	git push -u origin master # realiza a push pro servidor
	git pull # realizar a sincronização com o repo master
	git remote update # compara tudo q tem de novo
	git diff origin/master # verifica as 
	difirenças entre o git local e o master
	git add -i <arquivo> # modo iterrativo
	git rm -f <arquivo> # remove o arquivo

# Settando confg

# configurando de modo global o nome do usuário

	it config --global user.name "<nome>"

# configurar o e-mail
	git config --global user.email "<seu e-mail>"

# configurando o editor padrão
	git config --global core.editor <editor>

# Criando key ssh
	ssh-keygen -t rsa -b 4096 -C "kaioaresi@gmail.com" 

	ssh -T git@github.com

# Criando uma branch
	git checkout -b <nome brach> # criar nova branch
	git branch # verifica as branch disponivel
	git checkout <nome da branch> # para alterar de branch
	git push origin frutasdoces # puclicar a novo branch
	git branch -d <nome da branch> # remove a branch apenas dps do merge
	git branch -D <nome da branch> # remove a branch sem ter realiazado o merge (vai perde tudo na branch)
	git branch -a # mostra as branch deletadas
	git push origin --delete <nome da branch> # apaga a branch no remote git

# Git logs
	git log ou git log --pretty=online ou git log -p -<nome dos ultimos commits>
	git config format.pretty oneline # para definir um padrão
	git log --stat
	git commit --amend

# Git merge
	git merge --no-ff <nome branch>

g	git tag 1.0 <hash> # criando novo tag
	git push origin master --tags # puclicando a tags
	git tag -d 1.0 # deletando a tag
		git push origin :refs/tags/1.0

# Git recover
	git log # para capturar o hash
		git revert <hash> # volta até a versão do
		# ou
		git reset --hard <has> # forma mais agreciva de voltar, apagando todos arquivos
		git reset --soft <has>
		git push origin master --force # força o repo a voltar a mesma versão local




# Exercicios

1 - iniciar um novo repo
2 - 



